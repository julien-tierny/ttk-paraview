---
# We really don't want to check third party code at all with `clang-tidy`, so
# we enable a single set of checks (because disabling all checks is an error).
Checks: "-*,\
bugprone-*,\
-bugprone-assignment-in-if-condition,\
-bugprone-branch-clone,\
-bugprone-copy-constructor-init,\
-bugprone-easily-swappable-parameters,\
-bugprone-empty-catch,\
-bugprone-exception-escape,\
-bugprone-fold-init-type,\
-bugprone-implicit-widening-of-multiplication-result,\
-bugprone-incorrect-roundings,\
-bugprone-infinite-loop,\
-bugprone-integer-division,\
-bugprone-macro-parentheses,\
-bugprone-misplaced-widening-cast,\
-bugprone-multiple-statement-macro,\
-bugprone-narrowing-conversions,\
-bugprone-not-null-terminated-result,\
-bugprone-parent-virtual-call,\
-bugprone-reserved-identifier,\
-bugprone-signal-handler,\
-bugprone-signed-char-misuse,\
-bugprone-sizeof-expression,\
-bugprone-string-constructor,\
-bugprone-suspicious-include,\
-bugprone-suspicious-memory-comparison,\
-bugprone-suspicious-missing-comma,\
-bugprone-suspicious-realloc-usage,\
-bugprone-suspicious-semicolon,\
-bugprone-suspicious-string-compare,\
-bugprone-switch-missing-default-case,\
-bugprone-throw-keyword-missing,\
-bugprone-too-small-loop-variable,\
-bugprone-unhandled-self-assignment,\
-bugprone-unsafe-functions,\
-bugprone-unused-return-value,\
"
...
